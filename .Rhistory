OIL_PROD_1    = lag(OIL_PROD,-1)
OIL_STOCKS_1        = lag(OIL_STOCKS,-1)
WORLD_IP_1    = lag(WORLD_IP,-1)
US_CPI_1    = lag(US_CPI,-1)
diff_Yt_1   = lag(diff_Yt,-1)
diff_OIL_P_1   = lag(diff_OIL_P,-1)
diff_OIL_PROD_1   = lag(diff_OIL_PROD,-1)
diff_OIL_STOCKS_1   = lag(diff_OIL_STOCKS,-1)
diff_WORLD_IP_1   = lag(diff_WORLD_IP,-1)
diff_US_CPI_1   = lag(diff_US_CPI,-1)
ECMdata  = data.frame(ts.union(Yt, OIL_P, OIL_PROD, OIL_STOCKS, WORLD_IP, US_CPI,
Yt_1, OIL_P_1, OIL_PROD_1, OIL_STOCKS_1, WORLD_IP_1, US_CPI_1,
diff_Yt, diff_OIL_P, diff_OIL_PROD, diff_OIL_STOCKS, diff_WORLD_IP, diff_US_CPI,
diff_Yt_1, diff_OIL_P_1, diff_OIL_PROD_1, diff_OIL_STOCKS_1, diff_WORLD_IP_1, diff_US_CPI_1) )
formula  = diff_Yt ~ theta1*diff_Yt_1 + delta0*diff_OIL_P + delta1*diff_OIL_P_1 +
kappa0*diff_OIL_PROD + kappa1*diff_OIL_PROD_1 + Oilstock0*diff_OIL_PROD + Oilstock1*diff_OIL_PROD_1+
worldip0*diff_WORLD_IP + worldip1*diff_WORLD_IP_1 + uscpi0*diff_US_CPI + uscpi1*diff_US_CPI_1+
alpha*( Yt_1 - beta0 - beta1*OIL_P_1 - beta2*OIL_PROD_1 - beta3*OIL_STOCKS_1 - beta4*WORLD_IP_1 - beta5*US_CPI_1 )
ECMcoint = nls(formula, data = ECMdata, start = list(theta1 = theta1init,
delta0 = delta0init, delta1 = delta1init, kappa0 = kappa0init, kappa1 = kappa1init,
Oilstock0 = Oilstock0init, Oilstock1 = Oilstock1init,
worldip0 = worldip0init, worldip1 = worldip1init, uscpi0 = uscpi0init, uscpi1 = uscpi1init,
alpha = alphainit,
beta0 = beta0init, beta1 = beta1init, beta2 = beta2init, beta3 = beta3init,
beta4 = beta4init, beta5 = beta5init) )
ECMcoint = nls(formula, data = ECMdata, start = list(theta1 = theta1init,
delta0 = delta0init, delta1 = delta1init, kappa0 = kappa0init, kappa1 = kappa1init,
Oilstock0 = Oilstock0init, Oilstock1 = Oilstock1init,
worldip0 = worldip0init, worldip1 = worldip1init, uscpi0 = uscpi0init, uscpi1 = uscpi1init,
alpha = alphainit,
beta0 = beta0init, beta1 = beta1init, beta2 = beta2init, beta3 = beta3init,
beta4 = beta4init, beta5 = beta5init), tolerance(1e-6) )
ECMcoint = nls(formula, data = ECMdata, start = list(theta1 = theta1init,
delta0 = delta0init, delta1 = delta1init, kappa0 = kappa0init, kappa1 = kappa1init,
Oilstock0 = Oilstock0init, Oilstock1 = Oilstock1init,
worldip0 = worldip0init, worldip1 = worldip1init, uscpi0 = uscpi0init, uscpi1 = uscpi1init,
alpha = alphainit,
beta0 = beta0init, beta1 = beta1init, beta2 = beta2init, beta3 = beta3init,
beta4 = beta4init, beta5 = beta5init))
formula  = diff_Yt ~ theta1*diff_Yt_1 + delta0*diff_OIL_P + delta1*diff_OIL_P_1 +
kappa0*diff_OIL_PROD + kappa1*diff_OIL_PROD_1 +
alpha*( Yt_1 - beta0 - beta1*OIL_P_1 - beta2*OIL_PROD_1 )
ECMcoint = nls(formula, data = ECMdata, start = list(theta1 = theta1init,
delta0 = delta0init, delta1 = delta1init, kappa0 = kappa0init, kappa1 = kappa1init,
alpha = alphainit,
beta0 = beta0init, beta1 = beta1init, beta2 = beta2init))
summary(ECMcoint)
Yt_lags <- lapply(1:9, function(i) lag(Yt, -i))
OIL_P_lags <- lapply(1:9, function(i) lag(OIL_P, -i))
OIL_PROD_lags <- lapply(1:9, function(i) lag(OIL_PROD, -i))
ECMdata2 <- data.frame(Yt = Yt, Y_lags, OIL_P_lags, OIL_PROD_lags, OIL_STOCKS_lags, WORLD_IP_lags, US_CPI_lags)
Yt_lags <- lapply(1:9, function(i) lag(Yt, -i))
OIL_P_lags <- lapply(1:9, function(i) lag(OIL_P, -i))
OIL_PROD_lags <- lapply(1:9, function(i) lag(OIL_PROD, -i))
ECMdata2 <- data.frame(Yt = Yt, Yt_lags, OIL_P_lags, OIL_PROD_lags, OIL_STOCKS_lags, WORLD_IP_lags, US_CPI_lags)
Yt_lags <- lapply(1:9, function(i) lag(Yt, -i))
OIL_P_lags <- lapply(1:9, function(i) lag(OIL_P, -i))
OIL_PROD_lags <- lapply(1:9, function(i) lag(OIL_PROD, -i))
ECMdata2 <- data.frame(Yt = Yt, Yt_lags, OIL_P_lags, OIL_PROD_lags)
names(ECMdata2) <- c("Yt", paste0("Y_lags", 1:9), paste0("OIL_P_lags", 1:9),
paste0("OIL_PROD_lags", 1:9), )
Yt_lags <- lapply(1:9, function(i) lag(Yt, -i))
OIL_P_lags <- lapply(1:9, function(i) lag(OIL_P, -i))
OIL_PROD_lags <- lapply(1:9, function(i) lag(OIL_PROD, -i))
ECMdata2 <- data.frame(Yt = Yt, Yt_lags, OIL_P_lags, OIL_PROD_lags)
names(ECMdata2) <- c("Yt", paste0("Y_lags", 1:9), paste0("OIL_P_lags", 1:9),
paste0("OIL_PROD_lags", 1:9))
formula <- as.formula(paste("Yt ~",paste(c(paste0("Y_lags", 1:9),
paste0("OIL_P_lags", 1:9),
paste0("OIL_PROD_lags", 1:9), collapse = "+")))
static_model2 <- lm(Yt ~ OIL_P + OIL_PROD)
Yt_lags <- lapply(1:9, function(i) lag(Yt, -i))
OIL_P_lags <- lapply(1:9, function(i) lag(OIL_P, -i))
OIL_PROD_lags <- lapply(1:9, function(i) lag(OIL_PROD, -i))
ECMdata2 <- data.frame(Yt = Yt, Yt_lags, OIL_P_lags, OIL_PROD_lags)
names(ECMdata2) <- c("Yt", paste0("Y_lags", 1:9), paste0("OIL_P_lags", 1:9),
paste0("OIL_PROD_lags", 1:9))
formula <- as.formula(paste("Yt ~",paste(c(paste0("Y_lags", 1:9),
paste0("OIL_P_lags", 1:9),
paste0("OIL_PROD_lags", 1:9), collapse = "+")))
static_model2 <- lm(Yt ~ OIL_P + OIL_PROD)
formula <- as.formula(paste("Yt ~",paste(c(paste0("Y_lags", 1:9),
paste0("OIL_P_lags", 1:9),
paste0("OIL_PROD_lags", 1:9), collapse = "+")))
static_model2 <- lm(Yt ~ OIL_P + OIL_PROD)
static_model2 <- lm(Yt ~ OIL_P + OIL_PROD)
staticResiduals2  = ts(static_model2$residuals, start = 1974, frequency = 12)
ECMmodel3  = dynlm(diff_Yt ~ L(diff_Yt,1:9)
+ diff_OIL_P  + L(diff_OIL_P,1:9)
+ diff_OIL_PROD   + L(diff_OIL_PROD,1:9)
+ L(staticResiduals2,1) )
initial_model <- ECMmodel3
initial_values <- coef(initial_model)
ECMcointegration3 <- nls(formula, data=ECMdata2, start = as.list(initial_values))
formula2 <- as.formula(paste("Yt ~",paste(c(paste0("Y_lags", 1:9),
paste0("OIL_P_lags", 1:9),
paste0("OIL_PROD_lags", 1:9), collapse = "+")))
ECMmodel3  = dynlm(diff_Yt ~ L(diff_Yt,1:9)
formula2 <- as.formula(paste("Yt ~",paste(c(paste0("Y_lags", 1:9),
paste0("OIL_P_lags", 1:9),
paste0("OIL_PROD_lags", 1:9), collapse = "+")))
ECMmodel3  = dynlm(diff_Yt ~ L(diff_Yt,1:9)
ECMmodel3 = dynlm(diff_Yt ~ L(diff_Yt,1:9)
+ diff_OIL_P  + L(diff_OIL_P,1:9)
+ diff_OIL_PROD   + L(diff_OIL_PROD,1:9)
+ L(staticResiduals2,1))
initial_model <- ECMmodel3
initial_values <- coef(initial_model)
ECMcointegration3 <- nls(formula2, data=ECMdata2, start = as.list(initial_values))
formula2 <- as.formula(paste("Yt ~",paste(c(paste0("Y_lags", 1:9),
paste0("OIL_P_lags", 1:9),
paste0("OIL_PROD_lags", 1:9), collapse = "+")))
ECMmodel3 = dynlm(diff_Yt ~ L(diff_Yt,1:9)
static_model2 <- lm(Yt ~ OIL_P + OIL_PROD)
staticResiduals2  = ts(static_model2$residuals, start = 1974, frequency = 12)
ECMmodel3 = dynlm(diff_Yt ~ L(diff_Yt,1:9)
+ diff_OIL_P  + L(diff_OIL_P,1:9)
+ diff_OIL_PROD   + L(diff_OIL_PROD,1:9)
+ L(staticResiduals2,1))
Yt_lags <- lapply(1:9, function(i) lag(Yt, -i))
OIL_P_lags <- lapply(1:9, function(i) lag(OIL_P, -i))
OIL_PROD_lags <- lapply(1:9, function(i) lag(OIL_PROD, -i))
ECMdata2 <- data.frame(Yt = Yt, Yt_lags, OIL_P_lags, OIL_PROD_lags)
names(ECMdata2) <- c("Yt", paste0("Y_lags", 1:9), paste0("OIL_P_lags", 1:9),
paste0("OIL_PROD_lags", 1:9))
formula2 <- as.formula(paste("Yt ~",paste(c(paste0("Y_lags", 1:9),
paste0("OIL_P_lags", 1:9),
paste0("OIL_PROD_lags", 1:9), collapse = "+")))
initial_model <- ECMmodel3
initial_model <- ECMmodel3
initial_values <- coef(initial_model)
ECMcointegration3 <- nls(formula2, data=ECMdata2, start = as.list(initial_values))
formula2 <- as.formula(paste("Yt ~",paste(c(paste0("Y_lags", 1:9),
paste0("OIL_P_lags", 1:9),
paste0("OIL_PROD_lags", 1:9),
collapse = "+")))
initial_model <- ECMmodel3
initial_model <- "ECMmodel3"
initial_values <- coef(initial_model)
static_model2 <- lm(Yt ~ OIL_P + OIL_PROD)
staticResiduals2  = ts(static_model2$residuals, start = 1974, frequency = 12)
ECMmodel3 = dynlm(diff_Yt ~ L(diff_Yt,1:9)
+ diff_OIL_P  + L(diff_OIL_P,1:9)
+ diff_OIL_PROD   + L(diff_OIL_PROD,1:9)
+ L(staticResiduals2,1))
Yt_lags <- lapply(1:9, function(i) lag(Yt, -i))
OIL_P_lags <- lapply(1:9, function(i) lag(OIL_P, -i))
OIL_PROD_lags <- lapply(1:9, function(i) lag(OIL_PROD, -i))
ECMdata2 <- data.frame(Yt = Yt, Yt_lags, OIL_P_lags, OIL_PROD_lags)
names(ECMdata2) <- c("Yt", paste0("Y_lags", 1:9), paste0("OIL_P_lags", 1:9),
paste0("OIL_PROD_lags", 1:9))
initial_model <- ECMmodel3
initial_values <- coef(initial_model)
formula2 <- as.formula(paste("Yt ~",paste(c(paste0("Y_lags", 1:9),
paste0("OIL_P_lags", 1:9),
paste0("OIL_PROD_lags", 1:9),
collapse = "+")))
ECMcointegration3 <- nls(formula2, data=ECMdata2, start = as.list(initial_values))
static_model2 <- lm(Yt ~ OIL_P + OIL_PROD)
staticResiduals2  = ts(static_model2$residuals, start = 1974, frequency = 12)
ECMmodel3 = dynlm(diff_Yt ~ L(diff_Yt,1:9)
+ diff_OIL_P  + L(diff_OIL_P,1:9)
+ diff_OIL_PROD   + L(diff_OIL_PROD,1:9)
+ L(staticResiduals2,1))
Yt_lags <- lapply(1:9, function(i) lag(Yt, -i))
OIL_P_lags <- lapply(1:9, function(i) lag(OIL_P, -i))
OIL_PROD_lags <- lapply(1:9, function(i) lag(OIL_PROD, -i))
ECMdata2 <- data.frame(Yt = Yt, Yt_lags, OIL_P_lags, OIL_PROD_lags)
names(ECMdata2) <- c("Yt", paste0("Y_lags", 1:9), paste0("OIL_P_lags", 1:9),
paste0("OIL_PROD_lags", 1:9))
initial_model <- ECMmodel3
initial_values <- coef(initial_model)
formula2 <- as.formula(paste("Yt ~",paste(c(paste0("Y_lags", 1:9), paste0("OIL_P_lags", 1:9), paste0("OIL_PROD_lags", 1:9), collapse = "+")))
ECMcointegration3 <- nls(formula2, data=ECMdata2, start = as.list(initial_values))
formula2 <- as.formula( paste("Yt ~",paste(c(paste0("Y_lags", 1:9),
paste0("OIL_P_lags", 1:9), paste0("OIL_PROD_lags", 1:9), collapse = "+")))
ECMcointegration3 <- nls(formula2, data=ECMdata2, start = as.list(initial_values))
ECMcointegration3 <- nls(formula2, data=ECMdata2, start = as.list(initial_values))
ECMcointegration3 <- nls(formula2, data=ECMdata2, start = as.list(initial_values))
formula2 <- as.formula(paste("Yt ~",paste(c(paste0("Y_lags", 1:9), paste0("OIL_P_lags", 1:9), paste0("OIL_PROD_lags", 1:9), collapse = "+")))
ECMcointegration <- nls(formula, data=ECMdata, start = as.list(initial_values))
library(tools)
library(Hmisc)
library(dynlm)
library(lmtest)
library(vars)
library(VAR.etp)
library(xtable)
library(knitr)
library(forecast)
library(rmarkdown)
source("TimeSeriesFunctions.R")
library(urca)
library(stargazer)
library(urca)
library(stargazer)
library(tools)
library(Hmisc)
library(dynlm)
library(lmtest)
library(vars)
library(VAR.etp)
library(xtable)
library(knitr)
library(forecast)
library(rmarkdown)
source("TimeSeriesFunctions.R")
formula2 <- as.formula(paste("Yt ~",paste(c(paste0("Y_lags", 1:9), paste0("OIL_P_lags", 1:9), paste0("OIL_PROD_lags", 1:9),
collapse = "+")))
ECMcointegration <- nls(formula, data=ECMdata, start = as.list(initial_values))
formula2 <- as.formula(paste("Yt ~",paste(c(paste0("Y_lags", 1:9) + paste0("OIL_P_lags", 1:9) + paste0("OIL_PROD_lags", 1:9)))
ECMcointegration <- nls(formula2, data=ECMdata, start = as.list(initial_values))
library(VAR.etp)
library(varexternalinstrument)
library(urca)
library(stargazer)
library(tools)
library(Hmisc)
library(dynlm)
library(lmtest)
library(vars)
library(VAR.etp)
library(xtable)
library(knitr)
library(forecast)
library(rmarkdown)
library(urca)
library(stargazer)
library(tools)
library(Hmisc)
library(dynlm)
library(lmtest)
library(vars)
library(VAR.etp)
library(xtable)
library(knitr)
library(forecast)
library(rmarkdown)
source("TimeSeriesFunctions.R")
library(VAR.etp)
library(varexternalinstrument)
if(!require(vars)){install.packages("vars")}
library(vars)
if(!require(tidyr)){install.packages("tidyr")}
library(tidyr)
if(!require(dplyr)){install.packages("dplyr")}
library(dplyr)
if(!require(ggplot2)){install.packages("ggplot2")}
library(ggplot2)
if(!require(devtools)){install.packages("devtools")}
library(devtools)
if(!require(tidyverse)){install.packages("tidyverse")}
library(tidyverse)
remotes::install_github("angusmoore/varexternalinstrument")
library(varexternalinstrument)
data_var=cbind(Yt,OIL_P,OIL_PROD,OIL_STOCKS,WORLD_IP,US_CPI)
Reduced_VAR12 = VAR(data_var, p = 12, type = "const")
VARselect(data_var, lag.max=25, type = "const")
VARselect(data_var, lag.max=25, type = "const")
VARselect(data_var, lag.max=20, type = "const")
data_var=cbind(Yt,OIL_P,OIL_PROD,OIL_STOCKS,WORLD_IP,US_CPI)
Reduced_VAR12 = VAR(data_var, p = 12, type = "const")
residuals_VAR12 <- resid(Reduced_VAR12)
acf(residuals_VAR12)
pacf(residuals_VAR12)
plot(Reduced_VAR12)
library(VAR.etp)
library(varexternalinstrument)
library(varexternal)
if(!require(vars)){install.packages("vars")}
library(vars)
if(!require(tidyr)){install.packages("tidyr")}
library(tidyr)
if(!require(dplyr)){install.packages("dplyr")}
library(dplyr)
if(!require(ggplot2)){install.packages("ggplot2")}
library(ggplot2)
if(!require(devtools)){install.packages("devtools")}
library(devtools)
if(!require(tidyverse)){install.packages("tidyverse")}
library(tidyverse)
remotes::install_github("angusmoore/varexternalinstrument")
library(varexternalinstrument)
VARselect(data_var, lag.max=20, type = "const")
data_var=cbind(Yt,OIL_P,OIL_PROD,OIL_STOCKS,WORLD_IP,US_CPI)
Reduced_VAR12 = VAR(data_var, p = 12, type = "const")
plot(Reduced_VAR12)
serialcorrelation(VARmodel = Reduced_VAR12,nlag=25)
var12.stab=stability(Reduced_VAR12,type = "OLS-CUSUM")
plot(var12.stab, alpha=0.05)
var12.stab=stability(Reduced_VAR12,type = "OLS-CUSUM")
plot(var12.stab, alpha=0.05)
data_var=cbind(Yt,OIL_P,OIL_PROD,OIL_STOCKS,WORLD_IP,US_CPI)
Reduced_VAR12 = VAR(data_var, p = 12, type = "const")
stargazer(ADL_10,type = "text")
data_var=cbind(Yt,OIL_P,OIL_PROD,OIL_STOCKS,WORLD_IP,US_CPI)
Reduced_VAR12 = VAR(data_var, p = 12, type = "const")
stargazer(Reduced_VAR12,type = "text")
library(urca)
library(stargazer)
library(tools)
library(Hmisc)
library(dynlm)
library(lmtest)
library(vars)
library(VAR.etp)
library(xtable)
library(knitr)
library(forecast)
library(rmarkdown)
source("TimeSeriesFunctions.R")
data_var=cbind(Yt,OIL_P,OIL_PROD,OIL_STOCKS,WORLD_IP,US_CPI)
Reduced_VAR12 = VAR(data_var, p = 12, type = "const")
stargazer(Reduced_VAR12,type = "text")
summary(Reduced_VAR12)
y_lp <-as.data.frame(y)
library(urca)
library(stargazer)
library(tools)
library(Hmisc)
library(dynlm)
library(lmtest)
library(vars)
library(VAR.etp)
library(xtable)
library(knitr)
library(forecast)
library(rmarkdown)
source("TimeSeriesFunctions.R")
y_lp <-as.data.frame(y)
y <- cbind(new_data$Yt,new_data$OIL_P,new_data$OIL_PROD, new_data$OIL_STOCKS,new_data$WORLD_IP,new_data$US_CPI)
if(!require(vars)){install.packages("vars")}
library(vars)
if(!require(tidyr)){install.packages("tidyr")}
library(tidyr)
if(!require(dplyr)){install.packages("dplyr")}
library(dplyr)
if(!require(ggplot2)){install.packages("ggplot2")}
library(ggplot2)
if(!require(devtools)){install.packages("devtools")}
library(devtools)
if(!require(tidyverse)){install.packages("tidyverse")}
library(tidyverse)
remotes::install_github("angusmoore/varexternalinstrument")
library(varexternalinstrument)
library(VAR.etp)
library(varexternalinstrument)
library(varexternal)
new_data <- data.frame(Yt, OIL_P, OIL_PROD, OIL_STOCKS, WORLD_IP, US_CPI, Surprises)
y <- cbind(new_data$Yt,new_data$OIL_P,new_data$OIL_PROD, new_data$OIL_STOCKS,new_data$WORLD_IP,new_data$US_CPI)
colnames(y) <- c("Yt","OIL_P", "OIL_PROD", "OIL_STOCKS", "WORLD_IP", "US_CPI")
Z <- ts(Surprises)
names(Z) <- c("Surprises")
# estimate reduced var
GKvar <- VAR(y, p=12, type= "const")
shockcol <- externalinstrument(GKvar,Z, "OIL_P")
shockcol
# IRF
ma_reprensentation <- Phi(GKvar, 50)
irfs <- apply (ma_reprensentation, 3, function (x) x %*% shockcol)
irfs <- as.data.frame(t(irfs))
colnames(irfs) <- names(shockcol)
irfs <- mutate(irfs, horizon = 0:50)
irfs <- gather(irfs, key = variable, value = response, -horizon)
ggplot(irfs, aes(x=horizon, y=response, group= variable, color= variable))+geom_line()
irf_OIL_P <- ggplot((subset(irfs, variable %in% c("OIL_P"))),
aes(x = horizon, y = response, group = variable,
color = variable)) + geom_line()+scale_x_continuous(breaks=seq(0,50, 5))
irf_OIL_PROD <- ggplot((subset(irfs, variable %in% c("OIL_PROD"))),
aes(x = horizon, y = response, group = variable,
color = variable)) + geom_line()+scale_x_continuous(breaks=seq(0,50, 5))
irf_OIL_STOCKS <- ggplot((subset(irfs, variable %in% c("OIL_STOCKS"))),
aes(x = horizon, y = response, group = variable,
color = variable)) + geom_line()+scale_x_continuous(breaks=seq(0,50, 5))
irf_WORLD_IP <- ggplot((subset(irfs, variable %in% c("WORLD_IP"))),
aes(x = horizon, y = response, group = variable,
color = variable)) + geom_line()+scale_x_continuous(breaks=seq(0,50, 5))
irf_Yt <- ggplot((subset(irfs, variable %in% c("Yt"))),
aes(x = horizon, y = response, group = variable,
color = variable)) + geom_line()+scale_x_continuous(breaks=seq(0,50, 5))
irf_US_CPI <- ggplot((subset(irfs, variable %in% c("US_CPI"))),
aes(x = horizon, y = response, group = variable,
color = variable)) + geom_line()+scale_x_continuous(breaks=seq(0,50, 5))
install.packages("cowplot")
library(cowplot)
irfs_plots <- plot_grid(irf_OIL_P, irf_OIL_PROD, irf_OIL_STOCKS,
irf_WORLD_IP, irf_Yt, irf_US_CPI,
ncol = 2, labels = "AUTO")
irfs_plots
#5. Use local projections as an alternative approach to obtain the response of each of the variables to an oil supply surprise
install.packages("lpirfs")
library(lpirfs)
##Local projection
y <- cbind(new_data$Yt,new_data$OIL_P,new_data$OIL_PROD, new_data$OIL_STOCKS,new_data$WORLD_IP,new_data$US_CPI)
colnames(y) <- c("Yt","OIL_P", "OIL_PROD", "OIL_STOCKS", "WORLD_IP", "US_CPI")
y_lp <-as.data.frame(y)
LP = lp_lin(y_lp, lags_endog_lin = 12, shock_type = 1, trend = 0, confint = 1.96, hor = 50)
y <- cbind(new_data$Yt,new_data$OIL_P,new_data$OIL_PROD, new_data$OIL_STOCKS,new_data$WORLD_IP,new_data$US_CPI)
colnames(y) <- c("Yt","OIL_P", "OIL_PROD", "OIL_STOCKS", "WORLD_IP", "US_CPI")
y_lp <-as.data.frame(y)
LP = lp_lin(y_lp, lags_endog_lin = 12, shock_type = 1, trend = 0, confint = 1.96, hor = 50)
install.packages("lpirfs")
library(lpirfs)
y <- cbind(new_data$Yt,new_data$OIL_P,new_data$OIL_PROD, new_data$OIL_STOCKS,new_data$WORLD_IP,new_data$US_CPI)
colnames(y) <- c("Yt","OIL_P", "OIL_PROD", "OIL_STOCKS", "WORLD_IP", "US_CPI")
y_lp <-as.data.frame(y)
LP = lp_lin(y_lp, lags_endog_lin = 12, shock_type = 1, trend = 0, confint = 1.96, hor = 50)
plot(LP)
shock <- as.data.frame(new_data$OIL_P)
instrum <-as.data.frame(new_data$Surprises)
LP_iv = lp_lin_iv(y_lp, lags_endog_lin = 12, shock = shock,
instrum = instrum, use_twosls = TRUE, trend = 0,
confint = 1.96, hor= 50)
plot(LP_iv)
install.packages("lpirfs")
library(lpirfs)
##Local projection
y <- cbind(new_data$Yt,new_data$OIL_P,new_data$OIL_PROD, new_data$OIL_STOCKS,new_data$WORLD_IP,new_data$US_CPI)
colnames(y) <- c("Yt","OIL_P", "OIL_PROD", "OIL_STOCKS", "WORLD_IP", "US_CPI")
y_lp <-as.data.frame(y)
LP = lp_lin(y_lp, lags_endog_lin = 12, shock_type = 1, trend = 0, confint = 1.96, hor = 50)
shock <- as.data.frame(new_data$OIL_P)
instrum <-as.data.frame(new_data$Surprises)
LP_iv = lp_lin_iv(y_lp, lags_endog_lin = 12, shock = shock,
instrum = instrum, use_twosls = TRUE, trend = 0,
confint = 1.96, hor= 50)
install.packages("lpirfs")
library(lpirfs)
library(urca)
library(stargazer)
library(tools)
library(Hmisc)
library(dynlm)
library(lmtest)
library(vars)
library(VAR.etp)
library(xtable)
library(knitr)
library(forecast)
library(rmarkdown)
source("TimeSeriesFunctions.R")
colnames(y) <- c("Yt","OIL_P", "OIL_PROD", "OIL_STOCKS", "WORLD_IP", "US_CPI")
y_lp <-as.data.frame(y)
shock <- as.data.frame(new_data$OIL_P)
instrum <-as.data.frame(new_data$Surprises)
LP_iv = lp_lin_iv(y_lp, lags_endog_lin = 12, shock = shock,
instrum = instrum, use_twosls = TRUE, trend = 0,
confint = 1.96, hor= 50)
plot(LP_iv)
setwd("C:\\Users\\PaulRomer\\Desktop\\Rworkfile\\Timeseries")
if(!require(urca)){install.packages("urca")}
if(!require(tools)){install.packages("tools")}
if(!require(stargazer)){install.packages("stargazer")}
if(!require(dynlm)){install.packages("forecast")}
if(!require(Hmisc)){install.packages("Hmisc")}
if(!require(dynlm)){install.packages("dynlm")}
if(!require(lmtest)){install.packages("lmtest")}
if(!require(vars)){install.packages("vars")}
if(!require(VAR.etp)){install.packages("VAR.etp")}
if(!require(tseries)){install.packages("tseries")}
if(!require(knitr)){install.packages("knitr")}
if(!require(xtable)){install.packages("xtable")}
if(!require(rmarkdown)){install.packages("rmarkdown")}
if(!require(mise)){install.packages("mise")}
######################################################################################################
library(urca)
library(stargazer)
library(tools)
library(Hmisc)
library(dynlm)
library(lmtest)
library(vars)
library(VAR.etp)
library(xtable)
library(knitr)
library(forecast)
library(rmarkdown)
source("TimeSeriesFunctions.R")
source("TimeSeriesFunctions.R")
sample_size <- c(528)
n <-sample_size^(1/3)
print(n)
AR_AIC_US_IP_diff <- aic_table(US_IP_diff,10,0)
AR_BIC_US_IP_diff <- bic_table(US_IP_diff,10,0)
print(AR_AIC_US_IP_diff)
print(AR_BIC_US_IP_diff)
AR3 <- arima(US_IP_diff, order = c(3,0,0))
Qstatistic_ar3=LjungBox(AR3$residuals, 30, 3)
print(Qstatistic_ar3)
adf2_trend = ur.df (US_IP_diff, lags= 2, type= "trend")
summary(adf2_trend)
#8. Test whether lnYt is stationary
AR4_level      <- arima(US_IP, order = c(4,0,0))
Qstatistic_ar4_level =LjungBox(AR4_level$residuals, 30, 4)
print(Qstatistic_ar4_level )
level_adf3_trend = ur.df (US_IP, lags= 3, type= "trend")
summary(level_adf3_trend)
#US_IP_difflag1 <-lag(US_IP_diff, -1)
#US_IP_difflag2 <-lag(US_IP_diff, -2)
#US_IP_difflag3 <-lag(US_IP_diff, -3)
#trend <- seq(1, length(US_IP_diff))
#IfFtestsignificant <- lm(US_IP_diff~trend+US_IP_difflag1+US_IP_difflag2+US_IP_difflag3 )
#summary(IfFtestsignificant) it can also work if I need to remove the lnyt-1项 and do the regression.
level_adf3_drift = ur.df (US_IP, lags= 3, type= "drift")
summary(level_adf3_drift)
#US_IP_difflag1 <-lag(US_IP_diff, -1)
#US_IP_difflag2 <-lag(US_IP_diff, -2)
#US_IP_difflag3 <-lag(US_IP_diff, -3)
#IfFtestsignificant <- lm(US_IP_diff~US_IP_difflag1+US_IP_difflag2+US_IP_difflag3)
#summary(IfFtestsignificant) it can also work if I need to remove the lnyt-1项 and do the regression.
level_adf3_none = ur.df (US_IP, lags= 3, type= "none")
summary(level_adf3_none)
